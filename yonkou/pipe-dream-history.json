{"app\/Http\/Controllers\/SiteAPIController.php":null,"app\/Http\/Controllers\/SiteController.php":null,"app\/Http\/Controllers\/UserAPIController.php":null,"app\/Http\/Controllers\/UserController.php":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\User;\nuse App\\Http\\Requests\\UserRequest;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass UserController extends Controller\n{\n    \/**\n     * Display a listing of the users\n     *\n     * @param  \\App\\User  $model\n     * @return \\Illuminate\\View\\View\n     *\/\n    public function index(User $model)\n    {\n        return view('users.index', ['users' => $model->paginate(15)]);\n    }\n\n    \/**\n     * Show the form for creating a new user\n     *\n     * @return \\Illuminate\\View\\View\n     *\/\n    public function create()\n    {\n        return view('users.create');\n    }\n\n    \/**\n     * Store a newly created user in storage\n     *\n     * @param  \\App\\Http\\Requests\\UserRequest  $request\n     * @param  \\App\\User  $model\n     * @return \\Illuminate\\Http\\RedirectResponse\n     *\/\n    public function store(UserRequest $request, User $model)\n    {\n        $model->create($request->merge(['password' => Hash::make($request->get('password'))])->all());\n\n        return redirect()->route('user.index')->withStatus(__('User successfully created.'));\n    }\n\n    \/**\n     * Show the form for editing the specified user\n     *\n     * @param  \\App\\User  $user\n     * @return \\Illuminate\\View\\View\n     *\/\n    public function edit(User $user)\n    {\n        return view('users.edit', compact('user'));\n    }\n\n    \/**\n     * Update the specified user in storage\n     *\n     * @param  \\App\\Http\\Requests\\UserRequest  $request\n     * @param  \\App\\User  $user\n     * @return \\Illuminate\\Http\\RedirectResponse\n     *\/\n    public function update(UserRequest $request, User  $user)\n    {\n        $user->update(\n            $request->merge(['password' => Hash::make($request->get('password'))])\n                ->except([$request->get('password') ? '' : 'password']\n        ));\n\n        return redirect()->route('user.index')->withStatus(__('User successfully updated.'));\n    }\n\n    \/**\n     * Remove the specified user from storage\n     *\n     * @param  \\App\\User  $user\n     * @return \\Illuminate\\Http\\RedirectResponse\n     *\/\n    public function destroy(User  $user)\n    {\n        $user->delete();\n\n        return redirect()->route('user.index')->withStatus(__('User successfully deleted.'));\n    }\n}\n","app\/Site.php":null,"app\/User.php":"<?php\n\nnamespace App;\n\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\n\nclass User extends Authenticatable\n{\n    use Notifiable;\n\n    \/**\n     * The attributes that are mass assignable.\n     *\n     * @var array\n     *\/\n    protected $fillable = [\n        'name', 'email', 'password',\n    ];\n\n    \/**\n     * The attributes that should be hidden for arrays.\n     *\n     * @var array\n     *\/\n    protected $hidden = [\n        'password', 'remember_token',\n    ];\n\n    \/**\n     * The attributes that should be cast to native types.\n     *\n     * @var array\n     *\/\n    protected $casts = [\n        'email_verified_at' => 'datetime',\n    ];\n}\n","database\/factories\/SiteFactory.php":null,"database\/factories\/UserFactory.php":"<?php\n\n\/** @var \\Illuminate\\Database\\Eloquent\\Factory $factory *\/\nuse App\\User;\nuse Illuminate\\Support\\Str;\nuse Faker\\Generator as Faker;\n\n\/*\n|--------------------------------------------------------------------------\n| Model Factories\n|--------------------------------------------------------------------------\n|\n| This directory should contain each of the model factory definitions for\n| your application. Factories provide a convenient way to generate new\n| model instances for testing \/ seeding your application's database.\n|\n*\/\n\n$factory->define(User::class, function (Faker $faker) {\n    return [\n        'name' => $faker->name,\n        'email' => $faker->unique()->safeEmail,\n        'email_verified_at' => now(),\n        'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\/.og\/at2.uheWG\/igi', \/\/ password\n        'remember_token' => Str::random(10),\n    ];\n});\n","database\/migrations\/2019_06_25_82500_create_users_table.php":null,"database\/migrations\/2019_06_25_82501_create_password_resets_table.php":null,"database\/migrations\/2019_06_25_82502_create_sites_table.php":null,"database\/seeds\/DatabaseSeeder.php":"<?php\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    \/**\n     * Seed the application's database.\n     *\n     * @return void\n     *\/\n    public function run()\n    {\n        $this->call([UsersTableSeeder::class]);\n    }\n}\n","database\/seeds\/SiteSeeder.php":null,"database\/seeds\/UserSeeder.php":null,"routes\/api.php":"<?php\n\nuse Illuminate\\Http\\Request;\n\n\/*\n|--------------------------------------------------------------------------\n| API Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register API routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| is assigned the \"api\" middleware group. Enjoy building your API!\n|\n*\/\n\nRoute::middleware('auth:api')->get('\/user', function (Request $request) {\n    return $request->user();\n});\n","database\/migrations\/2014_10_12_000000_create_users_table.php":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateUsersTable extends Migration\n{\n    \/**\n     * Run the migrations.\n     *\n     * @return void\n     *\/\n    public function up()\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->rememberToken();\n            $table->timestamps();\n        });\n    }\n\n    \/**\n     * Reverse the migrations.\n     *\n     * @return void\n     *\/\n    public function down()\n    {\n        Schema::dropIfExists('users');\n    }\n}\n","database\/migrations\/2014_10_12_100000_create_password_resets_table.php":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreatePasswordResetsTable extends Migration\n{\n    \/**\n     * Run the migrations.\n     *\n     * @return void\n     *\/\n    public function up()\n    {\n        Schema::create('password_resets', function (Blueprint $table) {\n            $table->string('email')->index();\n            $table->string('token');\n            $table->timestamp('created_at')->nullable();\n        });\n    }\n\n    \/**\n     * Reverse the migrations.\n     *\n     * @return void\n     *\/\n    public function down()\n    {\n        Schema::dropIfExists('password_resets');\n    }\n}\n"}